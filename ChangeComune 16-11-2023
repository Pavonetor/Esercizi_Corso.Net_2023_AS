using Europe_Municipality;
using System;
using System.Collections.Generic;
using static Europe_Municipality.DeathPunishmentState;

namespace Europe_Municipality
{
    internal class Program
    {
        static void Main(string[]args)
        {
            string Comune = "Latina";

            State PaeseOrigine =  new State("IT");
            string RegioneOrigine = "Lazio";
            string ProvinciaOrigine = "Latina";

            State PaeseDestinazione = new State("IT");
            string RegioneDestinazione = "Campania";
            string ProvinciaDestinazione = "Napoli";


            ChangeComune (PaeseOrigine, RegioneOrigine, ProvinciaOrigine, PaeseDestinazione, RegioneDestinazione, ProvinciaDestinazione);
                
        }

        private static void ChangeComune(State paeseOrigine, string regioneOrigine, string provinciaOrigine, State paeseDestinazione, string regioneDestinazione, string provinciaDestinazione)
        {
            
        }

        
    }
    public class State
    {

        public string Bandiera { get; set; }
        public string Moneta { get; set; }
        public string Esercito { get; set; }
        public string Costituzione { get; set; }
        public string Confine { get; set; }

        public State(string bandiera, string moneta, string esercito, string costituzione, string confine)
        {
            Bandiera = bandiera;
            Moneta = moneta;
            Esercito = esercito;
            Costituzione = costituzione;
            Confine = confine;
        }
        public bool UsesEuroCurrency { get; set; }


    }
    public interface INato
    {

        void SpesaMilitare();
    }

    public class NatoState : State, INato
    {

        public bool IsNatoMember { get; set; }


        public NatoState(string bandiera, string moneta, string esercito, string costituzione, string confine, bool isNatoMember)
            : base(bandiera, moneta, esercito, costituzione, confine)
        {
            IsNatoMember = isNatoMember;
        }


        public void SpesaMilitare()
        {

        }


    }
    public class Nato : INato
    {
        
        public NatoState NatoMember { get; set; }

        
        public Nato(NatoState natoMember)
        {
            NatoMember = natoMember;
        }

       
        public void SpesaMilitare()
        {
            
            Console.WriteLine($"Spesa militare per lo stato membro della NATO: {NatoMember.Bandiera}");
        }

      
    }




    public interface IDeathPunishment
    {

        void Death();
    }
    public class DeathPunishmentState : State, IDeathPunishment
    {

        public DeathPunishmentState(string bandiera, string moneta, string esercito, string costituzione, string confine)
            : base(bandiera, moneta, esercito, costituzione, confine)
        {

        }


        public void Death()
        {

        }

        public class EuState : State
        {

            public bool IsEuMember { get; set; }


            public EuState(string bandiera, string moneta, string esercito, string costituzione, string confine, bool isEuMember)
                : base(bandiera, moneta, esercito, costituzione, confine)
            {
                IsEuMember = isEuMember;
            }

        }
        public class EurozoneState : EuState
        {

            


            public EurozoneState(string bandiera, string moneta, string esercito, string costituzione, string confine, bool isEuMember, bool usesEuroCurrency)
                : base(bandiera, moneta, esercito, costituzione, confine, isEuMember)
            {
                UsesEuroCurrency = usesEuroCurrency;
            }


        }
        public interface IEuroZone
        {

            void MonetaUnica();
        }
       


            public void Euro()
            {

                Console.WriteLine("Utilizza l'Euro come moneta unica.");
            }


        }

    }
 public class BCE : IEuroZone
 {
    
    public void MonetaUnica()
    {
        
        Console.WriteLine("La BCE gestisce l'Euro come moneta unica nella zona euro.");
    }

    
 }
 public interface IPoliticOrganization
 {
    
 }

 internal class EU
 {
    protected EuState state;
    public EuState CreateState(State state)
    {
        return null;
    }
    
 }

 public class State : IONU
 {
    

    
    public void TerritoryDefense()
    {
        Console.WriteLine("Implementazione della difesa del territorio secondo gli standard dell'ONU.");
    }

    public void PopulationControl()
    {
        
        Console.WriteLine("Implementazione del controllo della popolazione secondo gli standard dell'ONU.");
    }

   
 }
 public interface IONU : IPoliticOrganization
 {
   
    void TerritoryDefense();

   
    void PopulationControl();
 }
 public interface IEU : IPoliticOrganization
 {
    
    void EMA();

    
    void ConstitutionIntegration();

    
    void HumanRightsTribunal();
 }
 public class ONU : IONU
 {
    
    public string Unicef { get; set; }
    public string OMS { get; set; }
    public string Fifa { get; set; }

   
    public ONU(string unicef, string oms, string fifa)
    {
        Unicef = unicef;
        OMS = oms;
        Fifa = fifa;
    }
    public void TerritoryDefense()
    {
        
        Console.WriteLine("Implementazione della difesa del territorio secondo gli standard dell'ONU.");
    }

   
    public void PopulationControl()
    {
       
        Console.WriteLine("Implementazione del controllo della popolazione secondo gli standard dell'ONU.");
    }

    
 }
 public class StrasbourgCourt : IONU
 {
    
    public void TerritoryDefense()
    {
        
        Console.WriteLine("Implementazione della difesa del territorio della Corte di Strasburgo.");
    }

   
    public void PopulationControl()
    {
    
        Console.WriteLine("Implementazione del controllo della popolazione della Corte di Strasburgo.");
    }

  
 }
 public interface IAdministrationEntity
 {
    
    void HNS();

    void LawSystem();

    void EducationalSystem();
 }

 public interface IUEAdministrationEntity : IAdministrationEntity
 {
    void BorderDefinition(Parliament parliament);

    void WellfareServices();
 }

 public class Parliament
 {
    string Name { get; set; }
    public Parliament(string name, int membersCount)
    {
        Name = name;
    }
 }
 public interface IUEPublicAdministration : IUEAdministrationEntity
 {
    

    
 }
public class UERegion : IUEPublicAdministration
{
    
    public string RegionName { get; set; }
    public int NumberOfCities { get; set; }

    public void BorderDefinition(Parliament parliament)
    {
        throw new NotImplementedException();
    }

    public void EducationalSystem()
    {
        throw new NotImplementedException();
    }

    public void HNS()
    {
        throw new NotImplementedException();
    }

    public void LawSystem()
    {
        throw new NotImplementedException();
    }

    public void WellfareServices()
    {
        throw new NotImplementedException();
    }
}

public class UEProvince : IUEPublicAdministration
{
    public string ProvinceName { get; set; }
    public int Population { get; set; }

    public void BorderDefinition(Parliament parliament)
    {
        throw new NotImplementedException();
    }

    public void EducationalSystem()
    {
        throw new NotImplementedException();
    }

    public void HNS()
    {
        throw new NotImplementedException();
    }

    public void LawSystem()
    {
        throw new NotImplementedException();
    }

    public void WellfareServices()
    {
        throw new NotImplementedException();
    }
}



    public interface IUECitizenPublicService
    {
        
        void WellfareServices();

        
        void HNS(string euid);

        
        void EducationalSystem(string euId);

        
    }



public class EUID : IUECitizenPublicService
{
    
    public string EUIDNumber { get; set; }

    
    public EUID(string euidNumber)
    {
        EUIDNumber = euidNumber;
    }


    


    public void BorderDefinition(Parliament parliament)
    {
        
    }

    public void HNS()
    {
        
    }

    public void LawSystem()
    {
        
    }

    public void EducationalSystem()
    {
        
    }

    public void HNS(string euid)
    {
        
    }

    public void EducationalSystem(string euId)
    {
        
    }

    public void WellfareServices()
    {
        
    }
}

public class EUCitizen
{
    public string CitizenName { get; set; }
    public EUID EuidNumber { get; set; }

    public EUCitizen(string citizenName, string euidNumber)
    {
        CitizenName = citizenName;
        EuidNumber = new EUID(euidNumber);
    }
}

public class Territory
{
  
    public string Name { get; set; }
    public double Area { get; set; }
    public int Population { get; set; }

    
    public Territory(string name, double area, int population)
    {
        Name = name;
        Area = area;
        Population = population;
    }

   
}
public class Region : Territory
{
    
    public string RegionalCapital { get; set; }
    public int NumberOfCities { get; set; }

    
    public Region(string name, double area, int population, string regionalCapital, int numberOfCities)
        : base(name, area, population)
    {
        RegionalCapital = regionalCapital;
        NumberOfCities = numberOfCities;
    }

    
}

public class City : Territory
{
    
    public string Mayor { get; set; }
    public string CityHallLocation { get; set; }

    
    public City(string name, double area, int population, string mayor, string cityHallLocation)
        : base(name, area, population)
    {
        Mayor = mayor;
        CityHallLocation = cityHallLocation;
    }

    
}
public class Country
{
    
    public string CountryName { get; set; }
    public City CapitalCity { get; set; }
    public List<City> Cities { get; set; }

    
    public Country(string countryName, City capitalCity, List<City> cities)
    {
        CountryName = countryName;
        CapitalCity = capitalCity;
        Cities = cities;
    }

   
}
public class EUComune : City, IUECitizenPublicService
{
   
    public EUComune(string name, double area, int population, string mayor, string cityHallLocation)
        : base(name, area, population, mayor, cityHallLocation)
    {
    }

    
    public void WellfareServices()
    {
        
        Console.WriteLine($"Offerta di servizi sociali e del benessere nel comune: {Name}");
    }

    public void HNS(string euid)
    {
        
        Console.WriteLine($"Gestione del sistema sanitario nazionale per il cittadino con EUID: {euid} nel comune: {Name}");
    }

    public void EducationalSystem(string euId)
    {
        
        Console.WriteLine($"Gestione del sistema educativo per il cittadino cdon EU ID: {euId} nel comune: {Name}");
    }

    
}
