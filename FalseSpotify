using FalseSpotidy;
using System;
using System.Reflection;
using System.Linq;
using System.Globalization;

namespace FalseSpotidy
{
    internal class Program
    {
        static void Main(string[] args)
        {


            

            MediaPlayer _mediaPlayer = new MediaPlayer();
            UserListner _userListener = new UserListner(1, "Giovanni", true, new Radio[] { }, new Playlist[] { });
            UserInterface userInterface = new UserInterface(_mediaPlayer, _userListener);




            userInterface.SelectLangugae();

            
            userInterface.AutomaticConvertion();



            userInterface.RunMenu();
            MediaPlayer mediaPlayer = new MediaPlayer();


            Playlist myPlaylist = new Playlist("My Playlist");
            Song song1 = new Song("Canzone 1", "Tizio", "11", 30);
            Song song2 = new Song("Canzone 2", "Scossone", "33", 30);

            myPlaylist.AddSong(song1);
            myPlaylist.AddSong(song2);

            UserListner myProfile = new UserListner(22, "My Profile", true, new Radio[] { }, new Playlist[] { });
            Playlist Playlist1 = new Playlist("sdsi");
            Playlist Playlist2 = new Playlist("cisdjs");


            Album Album1 = new Album("1234");
            Album Album2 = new Album("45465");
            Artist myAlbum = new Artist(11, "Tizio", "Caio", new Album[]
            {
                Album2
            });

            myAlbum.AddAlbum(Album1);
            myAlbum.AddAlbum(Album2);

        }
    }

    public abstract class User
    {

        public int Id { get; set; }
        public string Name { get; set; }




        public User(int id, string name)
        {
            Id = id;
            Name = name;

        }

       



    }

    public class UserListner : User
    {
        public bool IsPremium { get; set; }
        Radio[] RadioFavorites { get; set; }

        Playlist[] PlayLists { get; set; }

        public UserListner(int id, string name, bool isPremium, Radio[] radioFavorites, Playlist[] playLists) : base(id, name)
        {
            IsPremium = isPremium;
            RadioFavorites = radioFavorites;
            PlayLists = new Playlist[0];
        }

        public void AddPlayList(Playlist playlist)
        {
            PlayLists = PlayLists.Append(playlist).ToArray();

            Console.WriteLine($"PlayList '{playlist.NamePlayList} added");
        }


    }


    public class Artist : User
    {
        public string Alias { get; set; }
        public Album[] Albums { get; set; }


        public Artist(int id, string name, string alias, Album[] albums) : base(id, name)
        {
            Alias = alias;
            Albums = new Album[0];

        }

        public void AddAlbum(Album album)
        {
            Albums = Albums.Append(album).ToArray();

            Console.WriteLine($"Albums'{album.Title}' added");
        }

    }

    public class Album
    {
        public string Title { get; set; }

        public Album(string title)
        {
            Title = title;
        }
    }

    public class Radio
    {
        public string NameRadio { get; set; }

        public Radio(string nameradio)
        {
            NameRadio = nameradio;
        }
    }
    public class Playlist
    {
        public string NamePlayList { get; set; }

        Song[] Songs { get; set; }

        public Playlist(string nameplaylist)
        {
            NamePlayList = nameplaylist;
            Songs = new Song[0];
        }

        public void AddSong(Song song)
        {
            Songs = Songs.Append(song).ToArray();

            Console.WriteLine($"Song '{song.NameSong}' added to the playlist '{NamePlayList}'");
        }

    }

    public class Song
    {
        public string NameSong { get; set; }
        public string Artist { get; set; }
        public string ReleaseDate { get; set; }
        public int Duration { get; set; }

        Album[] Albums { get; set; } = new Album[0];

        public Song(string NameSong, string Artist, string ReleaseDate, int Duration)
        {




        }
    }

    public class MediaPlayer 
    {
        private bool isPlaying = false;
        private bool isPaused = false;

        public void RunMediaPlayer()
        {

            Console.WriteLine("1: Start, 2: Pause, 3: Stop, 5: Next, 6: Previous, Q: Quit");
            bool isValid = true;
            while (isValid)
            {

                char keyInfo = Console.ReadKey().KeyChar;
                keyInfo = Char.ToLower(keyInfo);

                switch (keyInfo)
                {
                    case '1':
                        StartSong();
                        break;

                    case '2':
                        Pause();
                        break;

                    case '3':
                        Stop();
                        break;

                    case '4':
                        Next();
                        break;

                    case '5':
                        Previous();
                        break;

                    case 'q':
                        Console.WriteLine("Quitting the Media Player.");
                        isValid = false;
                        return;

                    default:
                        Console.WriteLine("Invalid key. Please try again.");
                        break;
                }



            }



            void StartSong()
            {
                Console.WriteLine("Song is playing");

            }
        }






        public void StartPlaylist()
        {
            if (!isPlaying)
            {
                Console.WriteLine("Playing a playlist.");
                isPlaying = true;
                isPaused = false;
            }
            else
            {
                Console.WriteLine("Media Player is already playing.");
            }
        }

        public void Pause()
        {
            if (isPlaying)
            {
                if (!isPaused)
                {
                    Console.WriteLine("Media Player paused.");
                    isPaused = true;
                }
                else
                {
                    Console.WriteLine("Media Player is already paused.");
                }
            }
            else
            {
                Console.WriteLine("Media Player is not currently playing.");
            }
        }

        public void Stop()
        {
            if (isPlaying)
            {
                Console.WriteLine("Media Player stopped.");
                isPlaying = false;
                isPaused = false;
            }
            else
            {
                Console.WriteLine("Media Player is not currently playing.");
            }
        }

        public void Next()
        {
            if (isPlaying)
            {
                Console.WriteLine("Playing next track.");
            }
            else
            {
                Console.WriteLine("Media Player is not currently playing.");
            }
        }

        public void Previous()
        {
            if (isPlaying)
            {
                Console.WriteLine("Playing previous track.");
            }
            else
            {
                Console.WriteLine("Media Player is not currently playing.");
            }
        }
    }

    class UserInterface
    {
        private MediaPlayer mediaPlayer;
        private UserListner userListener;

        public UserInterface(MediaPlayer mediaPlayer, UserListner userListener)
        {
            this.mediaPlayer = mediaPlayer;
            this.userListener = userListener;
        }



        public void RunMenu()
        {
            Console.WriteLine("Welcome to Menu");

            while (true)
            {
                DisplayMenu();
                char keyInfo = GetUserInput();
                keyInfo = Char.ToLower(keyInfo);


                switch (keyInfo)
                {

                    case '1':

                        ChoseSong();
                        break;
                    case '2':

                        DisplayArtists();
                        break;

                    case '3':

                        DisplayUserListener();
                        break;

                    case '4':

                        Console.WriteLine("Displaying Songs information.");
                        break;

                    case '5':

                        Console.WriteLine("Displaying Radio information.");
                        break;

                    case '6':

                        Console.WriteLine("Displaying Playlists information.");
                        break;

                    case 'q':
                        Console.WriteLine("Quitting the User Interface.");
                        return;

                    default:
                        Console.WriteLine("Invalid key. Please try again.");
                        break;



                }
            }
        }

        public void DisplayMenu()
        {

            Console.WriteLine("1: Chose a Song 2: Artists, 3: User Listener, 4: Song, 5: Radio, 6: Playlists, Q: Quit");


        }

        private char GetUserInput()
        {
            return Console.ReadKey().KeyChar;
        }

        private void DisplayArtists()
        {
            Console.WriteLine("Displaying Artists:");

        }

        private void DisplayUserListener()
        {
            Console.WriteLine("Displaying User Listener:");

        }



        public void ChoseSong()
        {

            Console.WriteLine("Chose a Song:");
            Console.WriteLine("1.XXX");
            Console.WriteLine("2.YYY");
            bool isPlaying = false;


            if (!isPlaying)
            {
                Console.WriteLine("Playing a song.");
                isPlaying = true;
               //isPaused = false;
            }
            else
            {
                Console.WriteLine("Media Player is already playing.");
            }

            while (isPlaying)
            {
                char keyinfo = Console.ReadKey().KeyChar;
                keyinfo = Char.ToLower(keyinfo);

                switch (keyinfo)
                {
                    case '1':
                       // RunMediaPlayer();
                        break;

                    case '2':
                        //RunMediaPlayer();
                        break;
                }

            }

            


        }
        
        public void SelectLangugae()
        {
        Console.WriteLine("Chose a language: 1.Italian   2.German");

            char keyinfo = Console.ReadKey().KeyChar;

            switch (keyinfo)
            {
                case '1':
                    Console.WriteLine("You Chose Italian");
                    break;
                case '2':
                    Console.WriteLine("You Chose German");
                    break;


            }


        }

        public void AutomaticConvertion()
        {
            string dateInIT = DateTime.Now.ToString("dddd, dd MMMM yyyy HH:mm:ss", new CultureInfo("it"));
            
            Console.WriteLine(dateInIT);
            
        }


    }
    
    
}


