using System;
using System.Collections.Generic;
using System.Linq;

namespace Europe_Municipality
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string Comune = "Latina";

            State PaeseOrigine = new State("IT", "Euro", "EsercitoItaliano", "Democrazia", "Alpi");
            string RegioneOrigine = "Lazio";
            string ProvinciaOrigine = "Latina";

            State PaeseDestinazione = new State("IT", "Euro", "EsercitoItaliano", "Democrazia", "Alpi");
            string RegioneDestinazione = "Campania";
            string ProvinciaDestinazione = "Napoli";


            ChangeComune(PaeseOrigine, RegioneOrigine, ProvinciaOrigine, PaeseDestinazione, RegioneDestinazione, ProvinciaDestinazione);

           

    static void ChangeComune(State paeseOrigine, string regioneOrigine, string provinciaOrigine, State paeseDestinazione, string regioneDestinazione, string provinciaDestinazione)
        {

        }







    }
    public class State
    {

        public string Nome { get; set; }
        public string Moneta { get; set; }
        public string Esercito { get; set; }
        public string Costituzione { get; set; }
        public string Confine { get; set; }

        public State(string name, string moneta, string esercito, string costituzione, string confine)
        {
            Nome = name;
            Moneta = moneta;
            Esercito = esercito;
            Costituzione = costituzione;
            Confine = confine;
        }
        public bool UsesEuroCurrency { get; set; }


    }
    public interface INato
    {

        void SpesaMilitare();
    }

    public class NatoState : State, INato
    {

        public bool IsNatoMember { get; set; }


        public NatoState(string Name, string moneta, string esercito, string costituzione, string confine, bool isNatoMember)
            : base(Name, moneta, esercito, costituzione, confine)
        {
            IsNatoMember = isNatoMember;
        }


        public void SpesaMilitare()
        {

        }


    }
    public class Nato : INato
    {

        public NatoState NatoMember { get; set; }


        public Nato(NatoState natoMember)
        {
            NatoMember = natoMember;
        }


        public void SpesaMilitare()
        {

            Console.WriteLine($"Spesa militare per lo stato membro della NATO: {NatoMember.Nome}");
        }


    }





    public interface IDeathPunishment
    {

        void Death();
    }
    public class DeathPunishmentState : State, IDeathPunishment
    {

        public DeathPunishmentState(string Name, string moneta, string esercito, string costituzione, string confine)
            : base(Name, moneta, esercito, costituzione, confine)
        {

        }


        public void Death()
        {

        }
    }
    public class EuState : State
    {

        public bool IsEuMember { get; set; }
        string _name;
        UERegion[] _regionList;
        int _numRegions;


        public EuState(string Name, string moneta, string esercito, string costituzione, string confine, bool isEuMember)
                : base(Name, moneta, esercito, costituzione, confine)
        {
            IsEuMember = isEuMember;
            _name = Name;
            _regionList = new UERegion[0];


        }

        public string Name { get => Name; set => value; }

        public UERegion[] RegionList { get => _regionList; set => _regionList = value; }

        public void AddRegion(UERegion region)
        {
            Array.Resize(ref _regionList, RegionList.Length + 1);
            _regionList[_regionList.Length - 1] = region;
        }





    }
    public class EurozoneState : EuState
    {




        public EurozoneState(string Name, string moneta, string esercito, string costituzione, string confine, bool isEuMember, bool usesEuroCurrency)
            : base(Name, moneta, esercito, costituzione, confine, isEuMember)
        {

        }








        public void Euro()
        {

            Console.WriteLine("Utilizza l'Euro come moneta unica.");
        }
    }


    public interface IEuroZone
    {

        void MonetaUnica();
    }





    public class BCE : IEuroZone
    {

        public void MonetaUnica()
        {

            Console.WriteLine("La BCE gestisce l'Euro come moneta unica nella zona euro.");
        }


    }
    public interface IPoliticOrganization
    {

    }

    internal class EU
    {
        protected EuState state;
        public EuState CreateState(State state)
        {
            return null;
        }

    }


    public interface IONU : IPoliticOrganization
    {

        void TerritoryDefense();


        void PopulationControl();
    }
    public interface IEU : IPoliticOrganization
    {

        void EMA();


        void ConstitutionIntegration();


        void HumanRightsTribunal();
    }
    public class ONU : IONU
    {

        public string Unicef { get; set; }
        public string OMS { get; set; }
        public string Fifa { get; set; }


        public ONU(string unicef, string oms, string fifa)
        {
            Unicef = unicef;
            OMS = oms;
            Fifa = fifa;
        }
        public void TerritoryDefense()
        {

            Console.WriteLine("Implementazione della difesa del territorio secondo gli standard dell'ONU.");
        }


        public void PopulationControl()
        {

            Console.WriteLine("Implementazione del controllo della popolazione secondo gli standard dell'ONU.");
        }


    }
    public class StrasbourgCourt : IONU
    {

        public void TerritoryDefense()
        {

            Console.WriteLine("Implementazione della difesa del territorio della Corte di Strasburgo.");
        }


        public void PopulationControl()
        {

            Console.WriteLine("Implementazione del controllo della popolazione della Corte di Strasburgo.");
        }


    }
    public interface IAdministrationEntity
    {

        void HNS();

        void LawSystem();

        void EducationalSystem();
    }

    public interface IUEAdministrationEntity : IAdministrationEntity
    {
        void BorderDefinition(Parliament parliament);

        void WellfareServices();
    }

    public class Parliament
    {
        string Name { get; set; }
        public Parliament(string name, int membersCount)
        {
            Name = name;
        }
    }
    public interface IUEPublicAdministration : IUEAdministrationEntity
    {



    }
    public class UERegion : IUEPublicAdministration

    {
        string _name;
        UEProvince[] _provinceList;
        EuState state;
        int _populationregion;

        public UERegion(string name)
        {
            _name = name;
            _provinceList = new UEProvince[0];
        }

        public string Name { get => _name; set => _name = value; }

        public EuState State { get => state; set => state = value; }

        public UEProvince[] ProvinceList { get => _provinceList; set => _provinceList = value; }

        public int PopulationRegion { get => _populationregion; set => _populationregion = value; }


        public void AddProvince(UEProvince province)
        {
            Array.Resize(ref _provinceList, ProvinceList.Length + 1);
            _provinceList[_provinceList.Length - 1] = province;
        }

        
        
        public string RegionName { get; set; }
        public int NumberOfCities { get; set; }



        public void BorderDefinition(Parliament parliament)
        {
            throw new NotImplementedException();
        }

        public void EducationalSystem()
        {
            throw new NotImplementedException();
        }

        public void HNS()
        {
            throw new NotImplementedException();
        }

        public void LawSystem()
        {
            throw new NotImplementedException();
        }

        public void WellfareServices()
        {
            throw new NotImplementedException();
        }
    }

    public class UEProvince : IUEPublicAdministration
    {
        public string ProvinceName { get; set; }
        public int Population { get; set; }

        string _name;
        UECity[] _CityList;
        UERegion UeState;
        int _populationprovince;

        public UEProvince(string name)
        {
            _name = name;
            _CityList = new UECity[0];
        }
        public string Name { get => _name; set => value; }
        public UERegion UeRegion { get ; set; }

        public UECity[] CityList { get; set; }
        
        public void AddCity(UECity city)
        {
            Array.Resize(ref _CityList, CityList.Length+1);
            _CityList[_CityList.Length-1] = city;
        }
        


        public void BorderDefinition(Parliament parliament)
        {
            throw new NotImplementedException();
        }

        public void EducationalSystem()
        {
            throw new NotImplementedException();
        }

        public void HNS()
        {
            throw new NotImplementedException();
        }

        public void LawSystem()
        {
            throw new NotImplementedException();
        }

        public void WellfareServices()
        {
            throw new NotImplementedException();
        }
    }

    public class UECity 
    {

        public string Name { get; set; }
        public string CityHallLocation { get; set; }


        public UECity(string name, string cityHallLocation)
           
        {
            Name = name;
            CityHallLocation = cityHallLocation;
        }


    }



    public interface IUECitizenPublicService
    {

        void WellfareServices();


        void HNS(string euid);


        void EducationalSystem(string euId);


    }



    public class EUID : IUECitizenPublicService
    {

        public string EUIDNumber { get; set; }


        public EUID(string euidNumber)
        {
            EUIDNumber = euidNumber;
        }





        public void BorderDefinition(Parliament parliament)
        {

        }

        public void HNS()
        {

        }

        public void LawSystem()
        {

        }

        public void EducationalSystem()
        {

        }

        public void HNS(string euid)
        {

        }

        public void EducationalSystem(string euId)
        {

        }

        public void WellfareServices()
        {

        }
    }

    public class EUCitizen
    {
        public string CitizenName { get; set; }
        public EUID EuidNumber { get; set; }

        public EUCitizen(string citizenName, string euidNumber)
        {
            CitizenName = citizenName;
            EuidNumber = new EUID(euidNumber);
        }
    }

    public class Territory
    {

        public string Name { get; set; }
        public double Area { get; set; }
        public int Population { get; set; }


        public Territory(string name, double area, int population)
        {
            Name = name;
            Area = area;
            Population = population;
        }


    }
    public class Region : Territory
    {

        public string RegionalCapital { get; set; }
        public int NumberOfCities { get; set; }


        public Region(string name, double area, int population, string regionalCapital, int numberOfCities)
            : base(name, area, population)
        {
            RegionalCapital = regionalCapital;
            NumberOfCities = numberOfCities;
        }




        public class City : Territory
        {

            public string Mayor { get; set; }
            public string CityHallLocation { get; set; }


            public City(string name, double area, int population, string mayor, string cityHallLocation)
                : base(name, area, population)
            {
                Mayor = mayor;
                CityHallLocation = cityHallLocation;
            }


        }
        public class Country
        {

            public string CountryName { get; set; }
            public City CapitalCity { get; set; }
            public List<City> Cities { get; set; }


            public Country(string countryName, City capitalCity, List<City> cities)
            {
                CountryName = countryName;
                CapitalCity = capitalCity;
                Cities = cities;
            }


        }
        public class EUComune : City, IUECitizenPublicService
        {

            public EUComune(string name, double area, int population, string mayor, string cityHallLocation)
                : base(name, area, population, mayor, cityHallLocation)
            {
            }


            public void WellfareServices()
            {

                Console.WriteLine($"Offerta di servizi sociali e del benessere nel comune: {Name}");
            }

            public void HNS(string euid)
            {

                Console.WriteLine($"Gestione del sistema sanitario nazionale per il cittadino con EUID: {euid} nel comune: {Name}");
            }

            public void EducationalSystem(string euId)
            {

                Console.WriteLine($"Gestione del sistema educativo per il cittadino cdon EU ID: {euId} nel comune: {Name}");
            }


        }



    }

}

